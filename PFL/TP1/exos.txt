let poly (a,b,c) x = a*.(x*.x) +. b*.x+.c;;
let p1 = poly (2.,-.1.,3.) x;;
let p2 = poly (-.1.,0.,12.) x;;

Exo 3 : 
1. let max (x,y) = ((x+y) + abs(x-y))/2;;
2. let min (x,y) = ((x+y) - abs(x-y))/2;;

Exo 4 : 

let rec pgcd a b = match (a,b) with
|a=b -> a
|b<>0 -> pgcd(a-b,b);;

let rec pgcd a b = if a = b 
then a 
else 
	if a>b then 
		pgcd (a-b) b 
	else 
		pgcd (b-a) a;;

Exo 0 : 

Ecrire une fonction retournant le quotient et le reste de la division de deux nombres entiers
en utilisant uniquement l'addition et la soustraction.

let division a b = ((quotient a b ) , (reste a b ));; 
	
let rec quotient a b = if a<b then 0 else 1 + quotient (a-b) b;;
let rec reste a b = if a <b then a else reste (a-b) b;;			


Exo 5 : 

Ecrire une fonction permettant de calculer le produit de deux entiers sans utiliser
l'opÃ©rateur de multiplication.

let rec multiplication a b = if a=0||b=0 then 0 else a + (multiplication a (b-1));;


Exo 6 : 

Ecrire une fonction permettant de renverser un nombre quelconque. ex : 123 ==> 321

let rec rang x = if x<10 then 1 else 10 * (rang(x/10));;
let rec reverse x = if x < 10 then x else x mod 10 * rang(x) + reverse(x/10);;
